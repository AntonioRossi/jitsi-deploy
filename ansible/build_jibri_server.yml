---
###
# * Add a new host into the inventory, e.g. inventory/production
# * Comment out ALL other jibri hosts to speed up the deployment (script loops over jibri group)
# * Source you openstack project credential
# * Run the playbook:
#    ansible-playbook -i inventory/production build_jibri_server.yml -D
###

- name: Create and launch jibri VM
  hosts: localhost
  vars:
    stream_servicename: "jibri"
    stream_vm_image: "Ubuntu Bionic 18.04 (SWITCHengines)"
    stream_vm_flavor: "m1.medium"
    stream_vm_ssh_key: "bisig-rsa"
    stream_vm_storage_type: "ceph-standard"
    stream_vm_storage_size: 30
    stream_vm_network: "private"
    stream_vm_auto_ip: "no"
    stream_secgroups:
      - "SSH"
    stream_security_groups:
      - name: "SSH"
        rules:
          - { proto: tcp, port_min: 22, port_max: 22, type: IPv6, prefix: "::/0"}
          - { proto: tcp, port_min: 22, port_max: 22, type: IPv4, prefix: "0.0.0.0/0"}

  tasks:
  - name: Create security groups
    os_security_group:
      state: present
      name: "{{ item.name }}"
    loop: "{{ stream_security_groups }}"
    tags:
      - security_group

  - name: Add rules
    os_security_group_rule:
      security_group: "{{ item.0.name }}"
      protocol: "{{ item.1.proto }}"
      port_range_min: "{{ item.1.port_min }}"
      port_range_max: "{{ item.1.port_max }}"
      ethertype: "{{ item.1.type }}"
      remote_ip_prefix: "{{ item.1.prefix }}"
    when: item.1.proto == "tcp" or item.1.proto == "udp"
    loop: "{{ lookup('subelements', stream_security_groups, 'rules') }}"
    tags:
      - security_group

  - include: start_stream.yml
    loop: "{{ groups[stream_servicename] }}"
